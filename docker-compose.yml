version: "2.4"
services:

  ## Metrics Infrastructure
  
  # Prometheus
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./examples/multiple-services/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
  
  # Grafana
  grafana:
    container_name: grafana
    image: grafana/grafana-oss:9.0.0
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  # Jaeger
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger-all-in-one
    ports:
      - "16686:16686"
      - "14268"
      - "14250"

  # Zipkin
  zipkin-all-in-one:
    image: openzipkin/zipkin:latest
    container_name: zipkin-all-in-one
    ports:
      - "9411:9411"

  # Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.62.1
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}"]
    volumes:
      - ./examples/multiple-services/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317"        # OTLP gRPC receiver
      - "55670:55679" # zpages extension
    depends_on:
      - jaeger-all-in-one
      - zipkin-all-in-one

  carbon-aware-sdk:
    image: ghcr.io/green-software-foundation/carbon-aware-sdk:sha-fb98ef8
    ports:
      - "80:80"
    env_file:
      - .env
    container_name: carbon-aware-sdk
    volumes:
      - ./docker/carbon-aware-sdk/location-sources:/app/location-sources
    environment:
      - DataSources__EmissionsDataSource=WattTime
      - DataSources__ForecastDataSource=WattTime
      - DataSources__Configurations__WattTime__Type=WattTime
      - DataSources__Configurations__WattTime__username=${WATTTIME_CLIENT_USERNAME:?err}
      - DataSources__Configurations__WattTime__password=${WATTTIME_CLIENT_PASSWORD:?err}
      - LocationDataSourcesConfiguration__LocationSourceFiles__0__DataFileLocation=azure-regions.json
      - LocationDataSourcesConfiguration__LocationSourceFiles__0__Prefix=az
      - LocationDataSourcesConfiguration__LocationSourceFiles__0__Delimiter=-
      - LocationDataSourcesConfiguration__LocationSourceFiles__1__DataFileLocation=custom-regions.json
      - LocationDataSourcesConfiguration__LocationSourceFiles__1__Prefix=custom
      - LocationDataSourcesConfiguration__LocationSourceFiles__1__Delimiter=_
  
  ## Application

  hello-service:
    image: hello-service:v1
    build:
      dockerfile: Dockerfile
      context: ./examples/multiple-services/hello-service
    container_name: hello-service
    ports:
      - "8082:8082"
    env_file:
      - .env
    depends_on:
      - otel-collector
    environment:
      - CARBON_AWARE_ENDPOINT=http:/app/location-sources/json/custom-regions.json'//carbon-aware-sdk:80
      - EMISSIONS_LOCATION=${EMISSIONS_LOCATION}
      - weatherServiceForecast_baseUrl=http://weather-service:8081

  weather-service:
    image: weather-service:v1
    build:
      dockerfile: Dockerfile
      context: ./examples/multiple-services/weather-service
    container_name: weather-service
    ports:
      - "8081:8081"
    env_file:
      - .env
    depends_on:
      - otel-collector
    environment:
      - CARBON_AWARE_ENDPOINT=http://carbon-aware-sdk:80
      - EMISSIONS_LOCATION=${EMISSIONS_LOCATION}